// <auto-generated />
using System;
using Cocodrinks.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Cocodrinks.Migrations
{
    [DbContext(typeof(CocodrinksContext))]
    partial class CocodrinksContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028");

            modelBuilder.Entity("Cocodrinks.Models.Article", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("Imagelocation");

                    b.Property<string>("Name");

                    b.Property<int?>("OrderId");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("Articles");
                });

            modelBuilder.Entity("Cocodrinks.Models.Image", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ImageName");

                    b.Property<long>("ImageSize");

                    b.Property<string>("Title");

                    b.Property<DateTime>("UploadDT");

                    b.HasKey("ID");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("Cocodrinks.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BankAccount");

                    b.Property<string>("Comment");

                    b.Property<DateTime>("CreateDate");

                    b.Property<DateTime>("DeliveryDate");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Cocodrinks.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessLevel");

                    b.Property<DateTime>("CreateDate");

                    b.Property<string>("Email");

                    b.Property<int>("Logincount");

                    b.Property<string>("Name");

                    b.Property<string>("Password");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Cocodrinks.Models.Article", b =>
                {
                    b.HasOne("Cocodrinks.Models.Order")
                        .WithMany("Articles")
                        .HasForeignKey("OrderId");
                });

            modelBuilder.Entity("Cocodrinks.Models.Order", b =>
                {
                    b.HasOne("Cocodrinks.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
